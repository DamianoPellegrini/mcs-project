= Conclusioni

L'analisi comparativa tra MATLAB e una soluzione open-source basata su C++ ha evidenziato risultati significativi in merito alla fattorizzazione di Cholesky applicata a matrici sparse simmetriche definite positive. MATLAB, nonostante la completa documentazione e l'integrazione con CHOLMOD, presenta alcune limitazioni dovute all'utilizzo di versioni obsolete delle librerie e alla chiusura del proprio ecosistema. Ciò ha comportato difficoltà nel trattamento di matrici di grandi dimensioni, dimostrando come aggiornamenti più frequenti delle librerie interne potrebbero migliorare le prestazioni e la stabilità del software.

Al contrario, l'implementazione in C++ ha evidenziato vantaggi concreti grazie all'utilizzo diretto di Eigen e SuiteSparse, consentendo un maggiore controllo sull'ottimizzazione e sull'integrazione con diverse librerie BLAS e LAPACK. L'adozione di Intel MKL, OpenBLAS e Apple Accelerate ha dimostrato come la scelta delle librerie di algebra lineare influenzi direttamente il tempo di decomposizione e la gestione della memoria rispetto a versioni precedenti utilizzate nelle soluzioni proprietarie, senza però differenze significative di prestazioni tra l'utilizzo di BLAS diversi su sistemi operativi differenti.

Un aspetto critico emerso è che, a parità di hardware e ambiente di esecuzione, MATLAB non è stato in grado di completare la fattorizzazione sulle due matrici più grandi, mentre la soluzione C++ ha gestito l'intero set di dati. Ciò evidenzia l'importanza di mantenere le librerie costantemente aggiornate per garantire la robustezza dell'algoritmo. Inoltre, la flessibilità offerta dall'approccio in C++ ha permesso di verificare l'impatto del numero di thread sulla fattorizzazione, rivelando che l'allocazione dinamica dei thread assieme ad un hardware migliore su macOS ha prodotto tempi di decomposizione leggermente migliori rispetto a Windows e Linux.

Da un punto di vista computazionale, la nostra analisi conferma che le soluzioni completamente open-source possono competere con MATLAB e, in alcuni casi, offrire prestazioni e precisione notevolmente superiori. Tuttavia, MATLAB rimane una scelta vantaggiosa per la prototipazione rapida e la semplicità d'uso, risultando più accessibile a utenti meno esperti in programmazione.

Inoltre, abbiamo osservato che, sebbene MATLAB sia un software proprietario, utilizza librerie open-source come CHOLMOD, parte di SuiteSparse. Questo solleva interrogativi sull'effettiva necessità di un software proprietario, quando si possono adottare direttamente librerie open-source che offrono la stessa funzionalità con maggiore flessibilità e senza i vincoli di un ecosistema chiuso, soprattutto quando questo ecosistema non mantiene aggiornati i componenti del nucleo necessari a determinati tipi di calcolo.

Si può quindi concludere che, se l'obiettivo è risolvere sistemi lineari sparsi in modo efficiente, la scelta del sistema operativo non è determinante quanto quella delle librerie BLAS e LAPACK adottate e l'architettura del sistema. Le prestazioni dipendono principalmente dalla quantità di RAM disponibile e dalla capacità del processore di gestire operazioni parallele, più che dal sistema operativo stesso. Inoltre, qualora fosse necessario utilizzare la memoria virtuale, è consigliabile disporre di un SSD veloce per evitare rallentamenti significativi, poiché l'uso di HDD tradizionali può compromettere le prestazioni durante operazioni di calcolo intensive, dato l'uso intensivo della memoria durante la decomposizione.

In definitiva, la scelta tra software proprietario e open-source dipende dalle esigenze specifiche: MATLAB garantisce un ambiente integrato e una facilità d'uso indiscutibile, mentre C++ con Eigen e CHOLMOD offre maggiore flessibilità e scalabilità su hardware moderno. Per applicazioni che richiedono prestazioni elevate su matrici di grandi dimensioni, un'implementazione open-source si dimostra non solo una valida alternativa, ma anche quella che potremmo considerare stato dell'arte, consentendo ottimizzazioni avanzate e un controllo diretto sull'allocazione della memoria e sui metodi di decomposizione utilizzati.

È importante sottolineare che, per gli utenti già integrati nell'ecosistema MATLAB che desiderano comunque beneficiare degli ultimi aggiornamenti delle librerie, esiste una soluzione intermedia. È infatti possibile compilare manualmente le versioni più recenti di SuiteSparse e integrarle in MATLAB seguendo la guida disponibile su GitHub, sostituendo così le versioni obsolete incluse nel software.

Analogamente, MATLAB consente di sostituire le librerie BLAS e LAPACK predefinite con implementazioni personalizzate o più aggiornate, come OpenBLAS. Questo approccio ibrido permette di mantenere i vantaggi dell'ambiente MATLAB in termini di facilità d'uso e strumenti di visualizzazione, mitigando al contempo le limitazioni derivanti dall'utilizzo di librerie obsolete. In questo modo, si ottiene un compromesso valido per chi non può o non desidera abbandonare completamente l'ambiente proprietario.

== Approfondimenti futuri

Per approfondire lo sviluppo di un software ad-hoc per la risoluzione di tali problematiche, si potrebbero valutare tecniche di parallelizzazione massiva tramite acceleratori hardware dedicati e tecniche di programmazione parallela tramite GPGPU. Un esempio significativo di come uno sviluppo simile possa rivelarsi vantaggioso è rappresentato dal recente sviluppo dell'Intelligenza Artificiale e dalla conseguente creazione di acceleratori hardware dedicati (TPU).

A questo proposito potrebbe essere interessante approfondire un aspetto che non siamo andati a considerare, ovvero l'utilizzo della libreria CHOLMOD su GPU tramite CUDA, che potrebbe portare a un ulteriore miglioramento delle prestazioni nella decomposizione di matrici sparse. L'uso di GPU per operazioni di algebra lineare è un campo in rapida evoluzione e potrebbe offrire vantaggi significativi in termini di velocità e capacità di gestire grandi volumi di dati.
