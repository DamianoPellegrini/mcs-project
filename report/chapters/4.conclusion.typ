= Conclusioni

L'analisi comparativa tra MATLAB e una soluzione open-source basata su C++ ha fornito risultati significativi riguardo alla fattorizzazione di Cholesky applicata a matrici sparse simmetriche definite positive. MATLAB, nonostante l'ampia documentazione e l'integrazione con CHOLMOD, mostra alcune limitazioni dovute all'uso di versioni obsolete delle librerie e alla chiusura del proprio ecosistema. Questo ha portato a difficoltà nel trattamento di matrici di grandi dimensioni, dimostrando che aggiornamenti più frequenti delle librerie interne potrebbero migliorare le prestazioni e la stabilità del software.

D'altra parte, la nostra implementazione in C++ ha evidenziato vantaggi concreti grazie all'uso diretto di Eigen e SuiteSparse, consentendo un maggiore controllo sull'ottimizzazione e sull'integrazione con diverse librerie BLAS e LAPACK. L'adozione di Intel MKL, OpenBLAS e Apple Accelerate ha dimostrato come la scelta delle librerie di algebra lineare influenzi direttamente il tempo di decomposizione e la gestione della memoria, senza grosse differenze di prestazioni tra l'utilizzo di BLAS diversi su sistemi operativi differenti.

Un aspetto critico emerso è che MATLAB non è stato in grado di completare la fattorizzazione sulle due matrici più grandi, mentre la soluzione C++ ha gestito l'intero set di dati. Questo evidenzia l'importanza di mantenere le librerie costantemente aggiornate per garantire la robustezza dell'algoritmo. Inoltre, la flessibilità offerta dall'approccio in C++ ha permesso di verificare l'impatto del numero di thread sulla fattorizzazione, rivelando che l'allocazione dinamica dei thread su macOS ha prodotto tempi di decomposizione leggermente migliori rispetto a Windows e Linux.

Dal punto di vista computazionale, la nostra analisi conferma che le soluzioni completamente open-source possono competere con MATLAB, offrendo prestazioni comparabili e, in alcuni casi, superiori. Tuttavia, MATLAB rimane una scelta vantaggiosa per la prototipazione rapida e la semplicità d'uso, risultando più accessibile per utenti meno esperti in programmazione.

Inoltre, abbiamo osservato che, nonostante MATLAB sia un software proprietario, utilizza librerie open-source come CHOLMOD, parte di SuiteSparse. Questo solleva interrogativi sull'effettiva necessità di un software proprietario, quando si possono adottare direttamente librerie open-source che offrono la stessa funzionalità con maggiore flessibilità e senza i vincoli di un ecosistema chiuso.

Si può quindi concludere che, se l'obiettivo è risolvere sistemi lineari sparsi in modo efficiente, la scelta del sistema operativo non è determinante quanto quella delle librerie BLAS e LAPACK adottate e l'architettura del sistema. Le prestazioni dipendono principalmente dalla quantità di RAM disponibile e dalla capacità del processore di gestire operazioni parallele, più che dal sistema operativo stesso. Inoltre, qualora fosse necessario utilizzare la memoria virtuale, è consigliabile disporre di un SSD veloce per evitare rallentamenti significativi, poiché l'uso di HDD tradizionali può compromettere le prestazioni durante operazioni di calcolo intensive, dato l'uso intensivo della memoria durante la decomposizione.

In definitiva, la scelta tra software proprietario e open-source dipende dalle esigenze specifiche: MATLAB garantisce un ambiente integrato e una facilità d'uso indiscutibile, mentre C++ con Eigen e CHOLMOD offre maggiore flessibilità e scalabilità su hardware moderno. Per applicazioni che richiedono prestazioni elevate su matrici di grandi dimensioni, un'implementazione open-source si dimostra una valida alternativa, consentendo ottimizzazioni avanzate e un controllo diretto sull'allocazione della memoria e sui metodi di decomposizione utilizzati.
